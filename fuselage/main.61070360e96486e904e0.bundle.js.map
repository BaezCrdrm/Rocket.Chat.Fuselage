{"version":3,"file":"main.61070360e96486e904e0.bundle.js","sources":["webpack:///./src/helpers/storybook.js"],"sourcesContent":["import { action } from '@storybook/addon-actions';\nimport centered from '@storybook/addon-centered/react';\nimport { boolean, number, select, text } from '@storybook/addon-knobs/react';\nimport React from 'react';\n\n\nexport const horizontallyCentered = (storyFn) => centered(() => (\n  <div style={{\n    height: '100vh',\n  }}>\n    {storyFn()}\n  </div>\n));\n\nexport const verticallyCentered = (storyFn) => centered(() => (\n  <div style={{\n    width: '100vw',\n  }}>\n    {storyFn()}\n  </div>\n));\n\nexport const createPropsFromKnobs = (defaults = {}, itemName = null) => (overrides = {}) =>\n  Object.entries({ ...defaults, ...overrides }).reduce((props, [propName, defaultValue]) => {\n    if (propName === 'children' && React.isValidElement(defaultValue)) {\n      return { ...props, [propName]: defaultValue };\n    }\n\n    if (typeof defaultValue === 'function') {\n      return { ...props, [propName]: defaultValue };\n    }\n\n    const knobName = itemName ? `${ itemName } / ${ propName }` : propName;\n\n    if (typeof defaultValue === 'boolean') {\n      return { ...props, [propName]: boolean(knobName, defaultValue) };\n    }\n\n    if (typeof defaultValue === 'number') {\n      return { ...props, [propName]: number(knobName, defaultValue) };\n    }\n\n    if (Array.isArray(defaultValue) && defaultValue.length === 2) {\n      if (Array.isArray(defaultValue[1])) {\n        return { ...props, [propName]: select(knobName, ['', ...defaultValue[1]], defaultValue[0]) };\n      }\n\n      return { ...props, [propName]: select(knobName, { '': null, ...defaultValue[1] }, defaultValue[0]) };\n    }\n\n    if (typeof defaultValue === 'undefined') {\n      return props;\n    }\n\n    return { ...props, [propName]: text(knobName, defaultValue) };\n  }, {});\n\nexport const handleEvent = (eventName) => {\n  const f = action(eventName);\n  f.toString = () => `action('${ eventName }')`;\n  return f;\n};\n\nexport function TextSection({ children }) {\n  return <section className='markdown-body' style={{ margin: '1rem', fontSize: '14px' }}>\n    {children}\n  </section>;\n}\n\nexport function ShowCaseSection({ children }) {\n  const style = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: '2rem',\n  };\n\n  return <div style={style}>\n    {children}\n  </div>;\n}\n\nexport function Document({ children }) {\n  const style = {\n    margin: '1rem auto',\n    maxWidth: '768px',\n  };\n\n  return <>\n    <link\n      rel='stylesheet'\n      href='https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/3.0.1/github-markdown.min.css'\n    />\n    <article style={style}>\n      {children}\n    </article>\n  </>;\n}\n\nexport function VariationsTable({ component: Component, common = {}, xAxis = {}, yAxis = {} }) {\n  const styles = {\n    table: {\n      borderCollapse: 'collapse',\n      margin: '0 auto',\n    },\n    th: {\n      fontFamily: 'sans-serif',\n      fontSize: '0.875rem',\n      fontWeight: 'bold',\n      border: '1px solid rgba(153, 153, 153, 0.15)',\n      color: '#999',\n      margin: 0,\n      padding: '0.5rem 1rem',\n      textAlign: 'center',\n      whiteSpace: 'nowrap',\n    },\n    td: {\n      border: '1px solid rgba(153, 153, 153, 0.15)',\n      margin: 0,\n      padding: '0.5rem 1rem',\n    },\n    wrapper: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  };\n\n  return <table style={styles.table}>\n    <thead>\n      <tr>\n        <th></th>\n        {Object.keys(xAxis).map((xVariation, key) => <th key={key} style={styles.th}>{xVariation}</th>)}\n      </tr>\n    </thead>\n    <tbody>\n      {Object.entries(yAxis).map(([yVariation, yProps], y) => (\n        <tr key={y}>\n          <th style={styles.th}>{yVariation}</th>\n          {Object.values(xAxis).map((xProps, x) => <td key={x} style={styles.td}>\n            <div style={styles.wrapper}>\n              <Component {...common} {...xProps} {...yProps} />\n            </div>\n          </td>)}\n        </tr>\n      ))}\n    </tbody>\n  </table>;\n}\n"],"mappings":"AAMA","sourceRoot":""}